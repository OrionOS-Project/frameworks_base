page.image=images/cards/card-n-sdk_2x.pngpage.title=设置预览版
meta.keywords="预览版", "android"
page.tags="preview", "developer preview"


@jd:body


<div id="qv-wrapper">
  <div id="qv">
<ol>
  <li><a href="#get-as13">获取 Android Studio 2.1</a></li>
  <li><a href="#get-sdk">获取 Android N SDK</a>
    <ol>
      <li><a href="#docs-dl">参考文档</a>
    </ol>
  </li>
  <li><a href="#java8">获取 Java 8 JDK 和 JRE</a></li>
  <li><a href="#create-update">更新或创建一个项目</a></li>
  <li><a href="#next">后续步骤</a></li>
</ol>
  </div>
</div>

<p>若要开发适用于 Android N Preview 的应用，您需要对您的开发者环境进行一些更新，如本页所述。
</p>

<p>若只是在 Android N 系统映像上测试应用的兼容性，请按照<a href="{@docRoot}preview/download.html">在 Android N 设备上进行测试</a>指南进行操作。
</p>

<img src="{@docRoot}preview/images/n-preview-setup.png" width="700" alt="" />


<h2 id="get-as13">获取 Android Studio 2.1（预览版）</h2>

<p>Android N 平台为 <a href="{@docRoot}preview/j8-jack.html">Java 8 语言功能</a>添加支持，该功能需要一个名为 Jack 的新编译器。当前仅在 Android Studio 2.1 中支持最新的 Jack 版本。因此，如果您想要使用 Java 8 语言功能，则必须使用 Android Studio 2.1 构建应用。或者，您不需要使用 Jack 编译器，但仍需要更新至 JDK 8 以便使用 Android N 平台进行编译，如下所述。






</p>

<p>在 Canary 发布渠道中，Android Studio 2.1 当前可以预览版的形式提供。如果您已拥有 Android Studio 且不需要更新到 Canary 发布渠道，您可通过单独安装的形式下载 Android Studio 2.1，并使用它在 Android N 中进行开发，从而使您的主要 Android Studio 环境不受影响。




</p>

<p>若要以单独安装的形式下载 Android Studio 2.1，则按照以下步骤进行操作（或者如果想要收到 Android Studio 2.1 作为现有安装的更新，则跳过第 4 步）：

</p>

<ol>
  <li>编辑现有 Android Studio 安装的名称并追加版本号。通过此方式，当您安装新版本时，新版本不会重写现有的版本。

</li>
  <li>从 <a href="http://tools.android.com/download/studio/canary/latest">Canary 发布渠道下载页面</a>为您的操作系统下载适当的 ZIP 文件。

  </li>
  <li>将软件包解压缩，并将 Android Studio 2.1 内容移到您系统上相应的应用位置，然后启动它。
</li>
  <li>打开 Settings 对话框（在 Windows/Linux 上打开 <strong>File &gt; Settings</strong>，或在 Mac 上打开 <strong>Android Studio &gt; Preferences</strong>）。在左侧面板中，选择 <strong>Appearance &amp; Behavior &gt; System Settings &gt; Updates</strong>。




  </li>
  <li>在 Updates 面板上，选中 <strong>Automatically check updates for</strong>复选框，并从下拉列表中选择 <strong>Canary Channel</strong>。


  </li>
</ol>

<p>保持此设置窗口处于打开状态，以执行下一步。</p>


<h2 id="get-sdk">获取 N Preview SDK</h2>

<p>开始使用 Android N API 进行开发时，您需要按如下所示在 Android Studio 中安装 Android N Preview SDK：
</p>

<ol>
  <li>同时还查看 Updates 面板（来自上面的第 4 步），选中 <strong>Automatically check updates for Android SDK</strong> 复选框，然后从下拉列表中选择 <strong>Preview Channel</strong>。



  </li>
  <li>点击 <strong>Check Now</strong>。</li>

  <li>在左侧面板中，选择 <strong>Appearance &amp; Behavior &gt; System Settings &gt; Android SDK</strong>。


  <li>点击 <strong>SDK Platforms</strong> 选项卡，然后选中 <strong>Android N Preview</strong> 复选框。
</li>

  <li>点击 <strong>SDK Tools</strong> 选项卡，然后选中 <strong>Android SDK Build Tools</strong>、<strong>Android SDK Platform-Tools</strong> 和 <strong>Android SDK Tools</strong> 复选框。



  </li>

  <li>点击 <strong>OK</strong>，然后接受需要安装的所有软件包的许可协议。

  </li>
</ol>

<h3 id="docs-dl">获取 N Preview 参考文档</h3>

<p>
  有关 Android N API 的详细信息可在 N Preview 参考文档中获取，您可以从下表下载该文档。此软件包包含一个离线的删节版 Android 开发者网站，并包含更新的 API 参考（适用于 Android N API），以及一个 API 差异报告。




</p>

<table>
  <tr>
    <th scope="col">文档</th>
    <th scope="col">校验和</th>
  </tr>
  <tr>
    <td style="white-space: nowrap">
    <a href="{@docRoot}shareables/preview/n-preview-1-docs.zip">n-preview-1-docs.zip</a></td>
    <td width="100%">
      MD5：4ab33ccbe698f46f125cc5b807cf9c2f<br>
      SHA-1：6a3880b3ccd19614daae5a4d0698ea6ae11c20a5
    </td>
  </tr>
<table>



<h2 id="java8">获取 Java 8 JDK 和 JRE</h2>

<p>若要使用 Android N 平台编译您的应用，您需要使用 Java 8 Developer Kit (JDK 8)，同时为了在 Android Studio 2.1 中使用一些工具，您需要安装 Java 8 Runtime Environment (JRE 8)。因此，如果您还没有每个软件的最新版本，请立即下载 JDK 8 和 JRE 8。



</p>

<p>然后，按如下所示在 Android Studio 中设置 JDK 版本：</p>

<ol>
  <li>在 Android Studio 中打开 Android 项目，然后通过选择 <strong>File &gt; Project Structure</strong> 打开“Project Structure”对话框。（或者，您可以通过选择 <strong>File &gt; Other Settings &gt; Default Project Structure</strong> 设置所有项目的默认值。）




   </li>
   <li>在对话框的左侧面板中，点击 <strong>SDK Location</strong>。
   </li>
   <li>在 <strong>JDK Location</strong> 字段中，输入 Java 8 JDK 的位置（点击右侧的按钮可浏览您的文件），然后点击 <strong>OK</strong>。


   </li>
</ol>

<img src="{@docRoot}preview/images/studio-jdk-location.jpg" width="700" alt="" />


<h2 id="create-update">更新或创建一个项目</h2>

<p>
  若要使用 Android N API，则必须正确配置您的项目。
</p>

<p>如果您计划使用 Java 8 语言功能，您还应阅读 <a href="{@docRoot}preview/j8-jack.html">Java 8 语言功能</a>，以更详细的了解支持的 Java 8 功能，以及如何使用 Jack 编译器配置项目。


</p>


<h3 id="update">更新现有项目</h3>

<p>打开模块的 <code>build.gradle</code> 文件，并按如下所示更新值：


</p>

<pre>
android {
  compileSdkVersion <strong>'android-N'</strong>
  buildToolsVersion <strong>'24.0.0-rc1'</strong>
  ...

  defaultConfig {
     minSdkVersion <strong>'N'</strong>
     targetSdkVersion <strong>'N'</strong>
     ...
  }
  ...
}</pre>


<h3 id="create">创建新项目</h3>


<p>若要使用 Android N  Preview SDK 创建新的开发项目：</p>

<ol>
  <li>点击 <strong>File &gt; New Project</strong>。按照步骤进行操作，直到您到达“Target Android Devices”页面。

  </li>
  <li>在此页面上，选择 <strong>Phone and Tablet</strong> 选项。</li>
  <li>在 <strong>Phone and Tablet</strong> 选项下，从 <strong>Minimum SDK</strong> 选项列表中，选择 <strong>N: Android API 23, N Preview (Preview)</strong>。

</li>
</ol>


<h2 id="next">后续步骤</h2>

<ul>
  <li>按照<a href="{@docRoot}preview/download.html">在 Android N 设备上进行测试</a>指南进行操作。</li>
  <li>通过<a href="{@docRoot}preview/behavior-changes.html">行为变更</a>以及 <a href="{@docRoot}preview/api-overview.html">Android N API 和功能</a>了解更多有关 Android N 平台的信息。


</li>
</ul>
<div class="end-content-title"></div>
