page.title=マテリアル テーマの使用

@jd:body

<div id="tb-wrapper">
<div id="tb">
<h2>このレッスンでの学習内容</h2>
<ol>
  <li><a href="#ColorPalette">カラー パレットをカスタマイズする</a></li>
  <li><a href="#StatusBar">ステータス バーをカスタマイズする</a></li>
  <li><a href="#Inheritance">テーマ個別のビュー</a></li>
</ol>
<h2>関連ドキュメント</h2>
<ul>
  <li><a href="http://www.google.com/design/spec">マテリアル デザインの仕様</a></li>
  <li><a href="{@docRoot}design/material/index.html">Android でのマテリアル デザイン</a></li>
</ul>
</div>
</div>


<p>新しいマテリアル テーマでは、次のものが提供されます。</p>

<ul>
  <li>カラー パレットを設定できるシステム ウィジェット</li>
  <li>システム ウィジェットのタッチ フィードバック アニメーション</li>
  <li>アクティビティ遷移アニメーション</li>
</ul>

<p>マテリアル テーマの外観は、ブランド イメージにあわせて自分のカラー パレットでカスタマイズできます。<a href="#fig3">図 3</a> のように、アクション バーやステータス バーにテーマ属性で色を付けることができます。</p>

<p>システム ウィジェットには、新しいデザインやタッチ フィードバックがあります。カラー パレット、タッチ フィードバック、アクティビティ遷移は、自分のアプリ向けにカスタマイズできます。</p>

<p>マテリアル テーマは次のように定義されます。</p>

<ul>
  <li><code>@android:style/Theme.Material</code> （暗色バージョン）</li>
  <li><code>@android:style/Theme.Material.Light</code> （明色バージョン）</li>
  <li><code>@android:style/Theme.Material.Light.DarkActionBar</code></li>
</ul>

<p>使用できるマテリアル スタイルのリストについては、API リファレンスの {@link android.R.style R.style} をご覧ください。</p>

<!-- two columns, dark/light material theme example -->
<div style="width:700px;margin-top:25px;margin-bottom:10px">
<div style="float:left;width:250px;margin-left:40px;margin-right:60px;">
  <img src="{@docRoot}design/material/images/MaterialDark.png" width="500" height="238">
  <div style="width:170px;margin:0 auto">
  <p style="margin-top:8px;font-size:12px"><strong>図 1</strong> 暗色マテリアル テーマ</p>
  </div>
</div>
<div style="float:left;width:250px;margin-right:0px;">
  <img src="{@docRoot}design/material/images/MaterialLight.png" width="500" height="238">
  <div style="width:170px;margin:0 auto">
  <p style="margin-top:8px;font-size:12px"><strong>図 2</strong> 明色マテリアル テーマ</p>
  </div>
</div>
<br style="clear:left">
</div>

<p class="note">
<strong>注:</strong> マテリアル テーマは、Android 5.0（API レベル 21）以降でのみ使用できます。<a href="{@docRoot}tools/support-library/features.html#v7">v7 サポート ライブラリ</a>は、一部のウィジェットに対してマテリアル デザイン スタイルでテーマを提供し、カラー パレットのカスタマイズをサポートしています。詳細については、<a href="{@docRoot}training/material/compatibility.html">互換性の維持</a>をご覧ください。
</p>


<h2 id="ColorPalette">カラー パレットをカスタマイズする</h2>

<p style="margin-bottom:30px">ブランド イメージに合うようにテーマの基本色をカスタマイズするには、次の例に示すようにマテリアル テーマから継承する場合、テーマ属性を使ってカスタム カラーを定義します。</p>

<pre>
&lt;resources>
  &lt;!-- inherit from the material theme -->
  &lt;style name="AppTheme" parent="android:Theme.Material">
    &lt;!-- Main theme colors -->
    &lt;!--   your app branding color for the app bar -->
    &lt;item name="android:colorPrimary">@color/primary&lt;/item>
    &lt;!--   darker variant for the status bar and contextual app bars -->
    &lt;item name="android:colorPrimaryDark">@color/primary_dark&lt;/item>
    &lt;!--   theme UI controls like checkboxes and text fields -->
    &lt;item name="android:colorAccent">@color/accent&lt;/item>
  &lt;/style>
&lt;/resources>
</pre>

<div style="float:right;margin-left:25px;margin-top:20px;margin-bottom:10px" id="fig3">
<img src="{@docRoot}training/material/images/ThemeColors.png" width="250" height="445" />
<p class="img-caption" style="margin-bottom:0px">
<strong>図 3</strong> マテリアル テーマのカスタマイズ</p>
</div>


<h2 id="StatusBar">ステータス バーをカスタマイズする</h2>

<p>マテリアル テーマを使うと、ステータス バーを簡単にカスタマイズできます。ブランド イメージに合わせて、またコントラストで白色のステータス アイコンを際立たせて色を設定できます。ステータス バーのカスタム カラーを設定するには、マテリアル テーマを拡張するときに <code>android:statusBarColor</code> 属性を使用します。デフォルトでは <code>android:statusBarColor</code> は <code>android:colorPrimaryDark</code> の値を継承します。</p>

<p>また、ステータス バーの背景を描くこともできます。たとえば、白色のステータス アイコンが見にくくならないように薄い暗色のグラデーションを付けて、ステータス バーを写真の上に透過的に表示したい場合、<code>&#64;android:color/transparent</code> に <code>android:statusBarColor</code> 属性を指定してウィンドウ フラグを希望の通りに調整します。アニメーションやフェードには、{@link android.view.Window#setStatusBarColor Window.setStatusBarColor()} メソッドも使用できます。</p>

<p class="note">
<strong>注:</strong> ステータス バーはメインのツールバーと明確に分かれている必要があります。ただし、背景に画面の端から端まで表示される鮮やかな画像やメディア コンテンツを使用したり、アイコンが見にくくならないようにグラデーションを使用する場合は例外です。
</p>

<p>ナビケーションとステータス バーをカスタマイズするときは、どちらも透過的にするか、ステータス バーだけを変更します。その他のケースではナビゲーション バーは黒色のままにする必要があります。</p>


<h2 id="Inheritance">テーマ個別のビュー</h3>

<p>XML レイアウト定義の各要素では、テーマのリソースを参照する <code>android:theme</code> 属性を指定できます。この属性は、要素や子要素のテーマを変更し、インターフェースの一定の割合を占めるテーマ カラー パレットを変更する場合に役立ちます。</p> 